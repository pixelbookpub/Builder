var arrLv = [['Blue','DGreen'],['Orange','Turquoise'],['Purple','Gold'],['Silver','Emerald'],['Ruby','Sapphire'],['Silver','Charcoal'],['Emerald','Green'],['Ruby','Maroon']];	//	( LOW, HIGH )var ip;var fileName;	//	BOOK NAMEvar compName;	//	COMPONENT NAMEvar compeX;		//	eX		Poster / Poemvar checkErrors;var makeEPUB;var destinationRadioButtonGroup;var buildZipRadioButtonGroup;var servi = "";var ver=1.11;main();function main(){	var myDialog = app.dialogs.add({name:"4EEEEEs Indesign Export", canCancel:true});		with(myDialog)	{						with(dialogColumns.add())		{						staticTexts.add({staticLabel:"Select Indesign Folder"});						with(borderPanels.add())			{				with(dialogColumns.add())				{					checkErrors = checkboxControls.add({staticLabel:" Show Indesign Messages", checkedState:false});				}			}						with(borderPanels.add())			{					staticTexts.add({staticLabel:"Build:"});					with(borderPanels.add())					{						buildZipRadioButtonGroup = radiobuttonGroups.add();						with(buildZipRadioButtonGroup)						{													with(dialogColumns.add())							{								var checkEPUBTest = radiobuttonControls.add({staticLabel:" TEST Design", checkedState:true});								makeEPUB = checkboxControls.add({staticLabel:" Make EPUB", checkedState:false});							}							var checkHyrix = radiobuttonControls.add({staticLabel:" Narration ZIP"});							var checkZip = radiobuttonControls.add({staticLabel:" FINAL ZIP"});							}						}						}						with(borderPanels.add())			{				staticTexts.add({staticLabel:"Export Build to:"});				destinationRadioButtonGroup = radiobuttonGroups.add();				with(destinationRadioButtonGroup)				{					var radioButtonDesk = radiobuttonControls.add({staticLabel:"Desktop", checkedState:true});					var radioButtonServer = radiobuttonControls.add({staticLabel:"Server"});				}			}						with(borderPanels.add())			{				staticTexts.add({staticLabel:"Update Script"});						}						staticTexts.add({staticLabel:"v"+ver});					}	}		var myResult = myDialog.show();	if(myResult == true)	{		var myFolder = Folder.selectDialog( "Select a folder with InDesign files" );		if(myFolder != null)		{			if(checkErrors.checkedState == false)			{				app.scriptPreferences.userInteractionLevel = UserInteractionLevels.NEVER_INTERACT;			}			find_files(myFolder);		}	}	else	{		app.scriptPreferences.userInteractionLevel = UserInteractionLevels.INTERACT_WITH_ALL 		myDialog.destroy();	}}function find_files(dir){	return find_files_sub(dir, []);}function find_files_sub(dir, array){	var f = Folder(dir).getFiles("*.*");	compeX='';	for (var i = 0; i < f.length; i++)    {    if (f[i] instanceof Folder)        find_files_sub(f[i], array);    else		if(f[i].name.slice(-5).toLowerCase()==".indd"&&f[i].name.substr(0,1)=='Y')		{			compName = f[i].name.substr(3,2);						if(compName=='eS'||compName=='eQ'||compName=='eT'||compName=='eD'||compName=='eX')			{	            array.push(f[i]);				app.open(f[i]);								if(compName=='eX')				{					var neX = app.activeDocument.filePath.name.lastIndexOf("P");					var nxP = app.activeDocument.filePath.name.toString()					compeX = nxP.substr(neX);				}				fileName = f[i].name.substr(0,f[i].name.length-5);								if(destinationRadioButtonGroup.selectedButton == 0)				{					ip = "~/Desktop/";					ip = ip.replace(/\%20/g, "\ ");										var fn1 = ip;					fn1 = fn1.replace(/ /g, "\\\\ ");					servi = fn1+'/Build/';										var fold1 = new Folder(servi);				    if(!fold1.exists)				    fold1.create();				}				else    	//		SERVER SAVE - MAYBE BUGGY				{					ip = app.activeDocument.filePath.toString();					ip = ip.replace(/\%20/g, "\ ");										var fn2 = ip;					fn2 = fn2.replace(/ /g, "\\\\ ");					servi = '/Volumes'+fn2+'/Build/'+fileName+"/EPUB/";									    var fold2 = new Folder(ip+"/Build/"+fileName+"/EPUB");				    if(!fold2.exists)				    fold2.create();									}																if(buildZipRadioButtonGroup.selectedButton==0)	//	Test check				{					if(makeEPUB.checkedState==true)					{						exportJPG(f[i]);						createEPUBCheck();					}					else					{						exportJPG(f[i]);						exportHTML(f[i]);						                            /*		BUILD FOLDERS		*/                            //alert('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/TO/")												if(compName=='eT'||compName=='eQ'||compName=='eS')						{													var shT = new Folder('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/TO/");						    if(!shT.exists){	shT.create();	}							var shF = new Folder('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/FROM/");						    if(!shF.exists){	shF.create();	}													}											}				}				else if(buildZipRadioButtonGroup.selectedButton==1)	//	Narr zip to Hurix				{					if(compName=='eT'||compName=='eQ'||compName=='eS')					{						exportJPG(f[i]);						exportHTML(f[i]);						setMetadata();											deleteJPGFolder(ip+"/Build/"+fileName+"/JPG/");						deleteVideo();						//narrAudioSet();											copyAudioResources(true)										zipNarrAssets()										}					else					{						alert("Audio Narration Export only required for: \n eQuest\n eScout\n eTales")						app.activeDocument.close();exit();					}														}								else if(buildZipRadioButtonGroup.selectedButton==2)	//	Final zip to Webfit				{					exportJPG(f[i]);					exportHTML(f[i]);					setMetadata();										deleteJPGFolder(ip+"/Build/"+fileName+"/JPG/");													copyAudioResources(false)					copyTeacherResources()										zipAssets()								}										app.activeDocument.close();				alert(compName+"   "+fileName+"\n Build Process COMPLETE")			}		}    }	return array;}function setMetadata(inDoc){	var metaPrefs = app.activeDocument.metadataPreferences;		var testf = File(servi+fileName+'/'+fileName+'.html')		if(testf.exists)	{		//alert(ip+'Build/Y2_eQ_Animals_Moving_Along/Y2_eQ_Animals_Moving_Along.html')		var m1 = '<meta name="author" content="'+metaPrefs.author+'"/>\n';		var m2 = '		<meta name="keywords" content="'+metaPrefs.keywords+'"/>\n';		var m3 = '		<meta name="description" content="'+metaPrefs.description+'"/>\n';				var tk1 = '		<script src="//use.typekit.net/cch5bwd.js"></script>\n';		var tk2 = '		<script>try{Typekit.load();}catch(e){}</script>\n';				testf.open("r");		var htmlStr = testf.read();		var n = htmlStr.indexOf("<title>");		var html2 = htmlStr.slice(0,n) + m1+m2+m3+tk1+tk2 +"		"+ htmlStr.slice(n);		testf.close();						testf.open("w")		testf.write(html2)		testf.close()		}	}function createEPUBCheck(){	var doc = app.activeDocument;	var str = wwwPath();	with(doc.epubFixedLayoutExportPreferences)  	{         externalStyleSheets = [str+":4EsH.css",str+":inhouse4Es.css"];		javascripts = [str+":jquery-2.1.3.min.js",str+":4EsH.js",str+":4EsCHECK.js",str+":inhouse4Es.js"] 	}			hideHTMLLayers(doc);	placeImages(doc)			doc.exportFile(ExportFormat.FIXED_LAYOUT_EPUB, File(servi+"CHECK_"+fileName+".epub"),false);	}function deleteVideo(){	var vf = Folder(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/video");    if(vf.exists)	{		var delv = vf.getFiles("*");		for(var w=0;w<delv.length;w++)  	    {  	        try			{  				var myFile = File(delv[w]);  				myFile.remove();  	        }			catch(E){}  	    }		//vf.remove();	}}function narrAudioSet(){    var af = Folder(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/audio");    if(!af.exists)	af.create();	}function copyAudioResources(isNarr){		narrAudioSet();		var folderArr;		if(!isNarr)	{		folderArr = ["Level","NonLevel","Character","Glossary"];	//	,"Effects"	are placed in audio folder	}	else	{		folderArr = ["Level","NonLevel"];	}		for (var fa=0;fa<folderArr.length;fa++)    {		var audF = Folder(app.activeDocument.filePath+"/Audio/"+folderArr[fa]+"/");		var audarr = Folder(audF).getFiles("*.mp3");		if(audarr.length>0)		{			var g = new Folder(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/audio/"+folderArr[fa].toLowerCase());		    if(!g.exists)		    g.create();						for (var j=0;j<audarr.length;j++)		    {				File(audarr[j]).copy(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/audio/"+folderArr[fa].toLowerCase()+"/"+audarr[j].name);					}				}		}		if(!isNarr)	{			if(compName=='eS'||compName=='eQ'||compName=='eT')		{			//var unzipit = app.doScript('do shell script "cd '+servi+fileName+' ; unzip  -r ../'+fileName+'.zip * ; " ', ScriptLanguage.applescriptLanguage);			//alert('do shell script "unzip -j '+app.activeDocument.filePath+"/Audio/_Narration"+fileName+'.zip  '+fileName+'-web-resources/smil -d '+ip+'/Build/'+fileName+'/'+fileName+'-web-resources/audio/ " ')						//alert(fileName+'/'+fileName+'-web-resources/smil -d '+ip+'/Build/'+fileName+'/'+fileName+'-web-resources/audio/ " ')						var sp = '/Volumes'+app.activeDocument.filePath;						sp = sp.replace(/\%20/g, "\ ");						sp = sp.replace(/ /g, "\\\\ ");			//var smp = sp+"/Audio"			var smp = sp+"/Audio/_Narration/"						var h = new Folder(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/audio/smil");		    if(!h.exists)		    h.create();									var sh = new Folder('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/tmp/");		    if(!sh.exists){	sh.create();	}									try			{				var unzipit = app.doScript('do shell script "unzip -j '+sp+"/Audio/_Narration/FROM/"+fileName+'.zip  '+fileName+'/'+fileName+'-web-resources/smil/*.smil -d '+sp+"/Audio/_Narration/tmp"+' " ', ScriptLanguage.applescriptLanguage);								//	REPLACE built HTML with HURIX version				var bh = File(ip+"/Build/"+fileName+"/"+fileName+'.html');				bh.remove();				var unzipHtml = app.doScript('do shell script "unzip -j -qq '+sp+"/Audio/_Narration/FROM/"+fileName+'.zip  '+fileName+'/*.html -d '+ip+"/Build/"+fileName+"/"+' " ', ScriptLanguage.applescriptLanguage);			}			catch(e){					alert("Narration UNZIP error!\n Check .zip from Hurix is in FROM folder \n"+e.message+" \n"+e.line);				//app.activeDocument.close();exit();			}									try			{				var st = "sed -i '' 's|\/audio|\/level|g' "+smp+"tmp/*.smil";				var sedit = app.doScript('do shell script "'+st+'"', ScriptLanguage.applescriptLanguage);			}			catch(e){	alert("Narration SED error!   \n"+e.message+" \n"+e.line);app.activeDocument.close();exit();	}									var smilarr = Folder('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/tmp").getFiles("*.smil");			for (var k=0;k<smilarr.length;k++)		    {				File(smilarr[k]).copy(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/audio/smil/"+smilarr[k].name);					}					    if(sh.exists)	/*	DELETE tmp folder	*/			{					for (var l=0;l<smilarr.length;l++)			    {					File(smilarr[l]).remove();						}				sh.remove();			}											}		}	}function copyTeacherResources(){	var fp = Folder(app.activeDocument.filePath.parent.parent+"/TeacherResources/")		var bk = fileName.substr(6);	bk = bk.replace(/_/g, " ");	var ns = Folder(app.activeDocument.filePath.parent).toString().lastIndexOf("/")+1;	var st = Folder(app.activeDocument.filePath.parent).toString().substr(ns);		var trf = fp+"/"+st+"/"+bk+"/";//alert(trf)	var pdfarr = Folder(trf).getFiles("*.pdf");	    var f = new Folder(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/pdf");    if(!f.exists)    f.create();	for (var i = 0; i < pdfarr.length; i++)    {		File(pdfarr[i]).copy(ip+"/Build/"+fileName+"/"+fileName+"-web-resources/pdf/"+pdfarr[i].name);	}}function zipNarrAssets()	/* NARRATION	*/{	var htmlzip1 = fileName+"-web-resources ";	var htmlzip2 = fileName+".html ";	var zipit = app.doScript('do shell script "cd '+servi+fileName+' ; zip  -r ../'+fileName+'.zip '+htmlzip1+htmlzip2+' ; " ', ScriptLanguage.applescriptLanguage);	var nz = File(servi+fileName+'.zip')	nz.copy('/Volumes'+app.activeDocument.filePath+"/Audio/_Narration/TO/"+fileName+'.zip')	}function zipAssets()	/*	FINAL	*/{	var zipit = app.doScript('do shell script "cd '+servi+fileName+' ; zip  -r ../'+fileName+'.zip * ; " ', ScriptLanguage.applescriptLanguage);	}function wwwPath(){	var wp = '/Volumes/4EEEEs/4eeeesWIP/MODULES/4Es Templates/build';	var newp = wp.replace(/\//g, ":");	//str = 'AKL-TTS-NAS01'+str.substr(8);	newp = newp.substr(9);	return newp;}/*function exportEPUB(inFile){	hideEPUBLayers(app.activeDocument);	var doc = app.activeDocument;		var str = wwwPath();		with(doc.epubFixedLayoutExportPreferences)  	{  	        //includeDocumentMetadata = true;  	        //imageExportResolution = ImageResolution.PPI_150;  	        //imageConversion = ImageConversion.JPEG;  	        //embedFont = false;  	        //includeCSSDefinition = false;  	        //preserveLocalOverride = false;  	        externalStyleSheets = [str+":4Es.css"];			javascripts = [str+":jquery-2.1.3.min.js",str+":4Es.js"]			//externalStyleSheets = [ip+"/a4Es.css"];  	} 	//var ep = doc.epubFixedLayoutExportPreferences.properties.toSource();	//alert(ep)    var f = new Folder(ip+"/Build/"+fileName+"/EPUB/");    if(!f.exists)    f.create();	doc.exportFile(ExportFormat.FIXED_LAYOUT_EPUB, File(ip+"/Build/"+fileName+"/EPUB/"+fileName+".epub"),false);}*/function hideEPUBLayers(inDoc){	try	{		inDoc.layers.item("eComp").visible = false;			inDoc.layers.item("Character and Video icon").visible = true;		inDoc.layers.item("Character with text").visible = true;		inDoc.layers.item("Universal Text").visible = true;				var namStr = app.activeDocument.name.toString();	//alert(namStr);		var docLvl = parseInt(namStr.substring(1,2))-1;		inDoc.layers.item(arrLv[docLvl][0]+" text (lower level)").visible = true;		inDoc.layers.item(arrLv[docLvl][1]+" text (higher level)").visible = true;			inDoc.layers.item(arrLv[docLvl][0]+" elements").visible = false;		inDoc.layers.item(arrLv[docLvl][1]+" elements").visible = false;	}	catch(e)	{		alert("Check Layer names!   \n"+e.message+" \n"+e.line);		app.activeDocument.close();		exit();		}	}function exportHTML(inFile){		var doc = app.activeDocument;		var str = wwwPath();	try	{		hideHTMLLayers(doc);	}	catch(e){	alert("Check Layer names \n"+e.message+" \n"+e.line);app.activeDocument.close();exit();	}			var jsS = str+":4EsH.js"	if(compName=='eX')	{		if(compeX=="Poster")		{			jsS = str+":4EsPoster.js"		}	}		placeImages(doc)		with(app.activeDocument.htmlExportPreferences)  	{		externalStyleSheets = [str+":4EsH.css"];		javascripts = [str+":jquery-2.1.3.min.js",jsS];	/*	,str+":4EsFINAL.js"	*/		preserveLayoutAppearence = true;		jpegOptionsQuality = JPEGOptionsQuality.HIGH;		imageExportResolution = ImageResolution.PPI_150;		//viewDocumentAfterExport = false;	}	app.activeDocument.exportFile(ExportFormat.HTML, File(ip+"/Build/"+fileName+"/"+fileName+".html"));	}function hideHTMLLayers(inDoc2){		inDoc2.layers.item("Background Images").remove();	inDoc2.layers.item("Universal Text").visible = true;		inDoc2.layers.add({name:"ImageLayer"});	if(compName!='eX')	{		inDoc2.layers.item("ImageLayer").move(LocationOptions.AFTER, inDoc2.layers.item("Character and Video icon"));		//inDoc2.layers.item("Character and Video icon").visible = true;	}	else	{		inDoc2.layers.item("ImageLayer").move(LocationOptions.AFTER, inDoc2.layers.item("Universal Text"));				if(compeX=="Poster")		{			inDoc2.layers.item("Universal Text").remove();		}	}		inDoc2.layers.item("eComp").remove();											if(compName=='eS'||compName=='eQ'||compName=='eT')	{		var namStr = app.activeDocument.name.toString();	//alert(namStr);		var docLvl = parseInt(namStr.substring(1,2))-1;		inDoc2.layers.item(arrLv[docLvl][0]+" text (lower level)").visible = true;		inDoc2.layers.item(arrLv[docLvl][1]+" text (higher level)").visible = true;						inDoc2.layers.item(arrLv[docLvl][0]+" elements").remove();		inDoc2.layers.item(arrLv[docLvl][1]+" elements").remove();		inDoc2.layers.item("Character with text").visible = true;	}}function placeImages(inDoc1){		var imgBgObjectStyle = inDoc1.objectStyles.add();  	imgBgObjectStyle.properties =	{  		enableStroke :false,		name:"ImageBackground"				}			for(var m = 0; m < inDoc1.pages.length; m++)    {		var i2="";		//if(i>0){	i2 = i+1;	}		i2 = m+1;		if(i2===1){	 i2="";	}		var f = File(ip+"/Build/"+fileName+"/JPG/"+fileName+i2+".jpg");//alert(ip+"/Build/"+fileName+"/JPG/"+fileName+i2+".jpg")		//var fNm = ip+"/Build/"+fileName+"/JPG/"+fileName+i2+".jpg";		inDoc1.pages[m].place(f,[0,0],inDoc1.layers.item("ImageLayer"));				inDoc1.pages[m].pageItems.everyItem().locked = false;				try		{			inDoc1.pages[m].pageItems[0].applyObjectStyle(imgBgObjectStyle,true,true);		} 		catch(e)		{				alert("ImageBackground style apply error \n"+e.message);			app.activeDocument.close();			exit();			}		        try		{  						var pg = app.activeDocument.pages[m];						if(pg.pageItems.count()>1)			{				pg.groups.add(pg.pageItems);			}			//pg.groups[0].applyObjectStyle(pgObjectStyle,true,true);	    }		catch(E)		{			var ms;			if(m===0){	ms="Check Author on Universal Text layer \n"	}			alert(ms+E.message+" on page:"+m+"\n"+E.line);			//app.activeDocument.close();			exit();					} 							}}function deleteJPGFolder(inPath){    var df = Folder(inPath);    if(df.exists)	{		var delf = df.getFiles("*");		for(var w=0;w<delf.length;w++)  	    {  	        try			{  				var myFile = File(delf[w]);  				myFile.remove();  	        }			catch(E){}  	    }		df.remove();	}}function exportJPG(inFile){	try	{		hideJPGLayers(app.activeDocument);	}	catch(e){	alert("Check Layer names!   \n"+e.message+" \n"+e.line);app.activeDocument.close();exit();	}		app.jpegExportPreferences.jpegExportRange = ExportRangeOrAllPages.EXPORT_ALL;	app.jpegExportPreferences.exportResolution = 150;    var f = new Folder(ip+"/Build/"+fileName+"/JPG/");    if(!f.exists)    f.create();	app.activeDocument.exportFile(ExportFormat.JPG, File(ip+"/Build/"+fileName+"/JPG/"+fileName+".jpg"),false);}function hideJPGLayers(inDoc){		inDoc.layers.item("eComp").visible = false;	inDoc.layers.item("Background Images").visible = true;		inDoc.layers.item("Universal Text").visible = false;			if(compName=='eX')	{		inDoc.layers.item("elements").remove();		if(compeX=="Poster")		{			inDoc.layers.item("Universal Text").visible = true;			inDoc.layers.item("Character and Video icon").visible = false;		}		}	else	{		inDoc.layers.item("Character and Video icon").visible = false;	}				if(compName=='eS'||compName=='eQ'||compName=='eT')	{		inDoc.layers.item("Character with text").visible = false;				var namStr = inDoc.name.toString();			var docLvl = parseInt(namStr.substring(1,2))-1;		inDoc.layers.item(arrLv[docLvl][0]+" text (lower level)").visible = false;		inDoc.layers.item(arrLv[docLvl][1]+" text (higher level)").visible = false;			inDoc.layers.item(arrLv[docLvl][0]+" elements").visible = false;		inDoc.layers.item(arrLv[docLvl][1]+" elements").visible = false;	}}